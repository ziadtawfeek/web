<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-07-03T15:27:59+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Ziad Tawfeek</title><subtitle>Learning Fanatic | Skeptical | Software Engineer in Test</subtitle><author><name>Ziad Tawfeek</name></author><entry><title type="html">Android UI Tests on a CI</title><link href="http://localhost:4000/2020-07-03/android-ui-tests-ci" rel="alternate" type="text/html" title="Android UI Tests on a CI" /><published>2020-07-03T00:00:00+02:00</published><updated>2020-07-03T00:00:00+02:00</updated><id>http://localhost:4000/2020-07-03/android-ui-tests-ci</id><content type="html" xml:base="http://localhost:4000/2020-07-03/android-ui-tests-ci">&lt;h2 id=&quot;why-do-we-need-this&quot;&gt;Why do we need this?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;A CI/CD pipeline is a software build and delivery process where changes go through sequential steps to build, test, and deploy. They both serve as &lt;strong&gt;mistake-proofing process&lt;/strong&gt; and as &lt;strong&gt;a feedback mechanism&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Even more broadly, a pipeline can be modeled as the following which is a directed graph with finite nodes and no cycles. Each step in the build process is a node(circle), and the directed edges(connections) lead the code to its next sequential step.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://fastersafely.com/images/pipeline_1.png&quot; alt=&quot;https://fastersafely.com/images/pipeline_1.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;back-story&quot;&gt;Back Story&lt;/h2&gt;

&lt;p&gt;3 years ago when I was developing &lt;strong&gt;UI Tests&lt;/strong&gt; for Android apps, it was challenging to integrate these tests on CI and include it on pipeline (Specifically talking about UI Tests using Espresso). So, we covered only Unit Tests &amp;amp; Integration Tests.&lt;/p&gt;

&lt;p&gt;Here are the challenges we encountered especially if you are part of a small team:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The pipeline we used included &lt;strong&gt;CircleCI&lt;/strong&gt;, it was painful to make it work with because &lt;strong&gt;&lt;a href=&quot;https://www.reddit.com/r/androiddev/comments/7hsar5/has_anyone_been_able_to_run_espresso_tests_in/&quot;&gt;x86 emulators are not supported&lt;/a&gt;&lt;/strong&gt;, and running ARM emulators is way too slow to be useful.&lt;/li&gt;
  &lt;li&gt;Setting up and managing an &lt;strong&gt;&lt;a href=&quot;https://bughuntersam.com/setting-up-a-homemade-charging-station/&quot;&gt;in-house device farm&lt;/a&gt;&lt;/strong&gt; is &lt;strong&gt;expensive&lt;/strong&gt; and requires long-term investment and on-going infrastructure support - &lt;strong&gt;not a viable option for most teams especially if you are a small one&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Cloud-based device farms such as &lt;strong&gt;Firebase Test Lab&lt;/strong&gt; are a much more cost-effective solution for most teams as they take care of managing the infrastructure while offering simple APIs for integrating with existing CI pipelines. However, if you are willing to spend üí∞üí∞üí∞üí∞ then go for it. But if you need a reasonable price with a large number of tests, you might need to consider something else.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;pre-requisites&quot;&gt;Pre-requisites&lt;/h2&gt;

&lt;p&gt;We need to have these checkboxes on our environment to run in a CI:&lt;/p&gt;

&lt;p&gt;[ ]  Supports configuring the Android Emulator system images used - API level, target: (default or google_apis), arch / ABI (x86 or x86_64).
[ ]  Supports running modern x86 and x86_64 based emulators with¬†&lt;strong&gt;hardware acceleration (KVM) enabled&lt;/strong&gt;¬†for better performance.
[ ]  Provides enough RAM for running both¬†&lt;strong&gt;Gradle&lt;/strong&gt;¬†and an instance of¬†&lt;strong&gt;Emulator&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-tools-check-these-boxes&quot;&gt;What tools check these boxes?&lt;/h2&gt;

&lt;h3 id=&quot;1-bitrise&quot;&gt;&lt;a href=&quot;https://www.bitrise.io/&quot;&gt;1. Bitrise&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Bitrise provides an &lt;strong&gt;Android Build for UI Testing&lt;/strong&gt; and &lt;strong&gt;Virtual Device Testing&lt;/strong&gt; for Android steps that use &lt;strong&gt;Firebase Test Lab&lt;/strong&gt; to run tests for the chosen module/build variant with no limit on device hours / no. of test executions.&lt;/li&gt;
  &lt;li&gt;What I like about Bitrise how easy you can set up your workflow using their &lt;strong&gt;Online Workflow Editor&lt;/strong&gt;. It makes your life easy instead of configuring your own &lt;code class=&quot;highlighter-rouge&quot;&gt;YAML&lt;/code&gt; file like this&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/ziadtawfeek/fd775a57e799a01917688776be25cbb3.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;to this ‚§µÔ∏è&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/bitrise-workflow.png&quot; alt=&quot;/assets/bitrise-workflow.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After getting this to work, you will get something like this ‚§µÔ∏è&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/bitrise-summary.png&quot; alt=&quot;/assets/bitrise-summary.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Easy setup, a great tool for iOS &amp;amp; Android, Great Support&lt;/strong&gt;  are the top reasons why you should use Bitrise.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Just be careful that when you are relying on a platform&lt;/strong&gt; and ecosystem makes it harder to port pipelines to potentially better alternatives in the future&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-github-actions&quot;&gt;&lt;a href=&quot;https://github.com/features/actions&quot;&gt;2. GitHub Actions&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;GitHub recently added support for CI/CD and is free for public repositories. As a result, many open-source projects on GitHub are starting to migrate their CI/CD workflows to GitHub Actions which has integration with GitHub itself and &lt;strong&gt;strong infrastructure support from Azure.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Looking into their &lt;a href=&quot;https://docs.github.com/en/actions/reference/software-installed-on-github-hosted-runners#android&quot;&gt;virtual environments reference&lt;/a&gt;. They don‚Äôt support a &lt;a href=&quot;https://github.com/actions/virtual-environments/issues/836#issuecomment-624574235&quot;&gt;hardware-accelerated emulator&lt;/a&gt; within a docker container on a Linux / Ubuntu VM but they offer macOS machines, and these macOS VMs ticks our checkboxes.&lt;/li&gt;
  &lt;li&gt;But we will need to install and configure Android SDK components, create a new instance of an AVD, launch the emulator and run the tests via Gradle.&lt;/li&gt;
  &lt;li&gt;Luckily for us, there‚Äôs a &lt;a href=&quot;https://github.com/marketplace/actions/android-emulator-runner&quot;&gt;Custom GitHub Action&lt;/a&gt; on the marketplace that helps us to do that.&lt;/li&gt;
  &lt;li&gt;A major feature that GitHub Actions brings, that you can test multiple versions of an application in parallel using &lt;strong&gt;&lt;a href=&quot;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions&quot;&gt;Matrix Builds&lt;/a&gt;&lt;/strong&gt; which lets you, for example, test three different versions of Android APIs at the same time. Because GitHub Actions are defined in a basic YAML file, making those changes is only a matter of adding a few lines to the file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After getting this to work, you will get something like this ‚§µÔ∏è&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/github-actions.png&quot; alt=&quot;/assets/github-actions.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;conclusion-1&quot;&gt;Conclusion:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Open-source friendliness&lt;/strong&gt;, &lt;strong&gt;Integration with many tools&lt;/strong&gt; and &lt;strong&gt;Community Support&lt;/strong&gt; why you should use &lt;strong&gt;GitHub Actions&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;As we run the workflow directly a macOS VM, not a Docker container to overcome the HAXM. We are missing out on some runtime optimization and as tests increase, time will increase. It also remains to be seen how easy to migrate from &lt;strong&gt;GitHub Actions&lt;/strong&gt; to other CI/CD providers in the future.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Ziad</name></author><summary type="html">Why do we need this?</summary></entry><entry><title type="html">No One Knows The Future</title><link href="http://localhost:4000/2020-06-06/no-one-knows-the-future" rel="alternate" type="text/html" title="No One Knows The Future" /><published>2020-06-06T00:00:00+02:00</published><updated>2020-06-06T00:00:00+02:00</updated><id>http://localhost:4000/2020-06-06/no-one-knows-the-future</id><content type="html" xml:base="http://localhost:4000/2020-06-06/no-one-knows-the-future">&lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/flagged/photo-1577912504896-abc46b500434?ixlib=rb-1.2.1&amp;amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=2300&amp;amp;q=80&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Disclaimer: This blog is by far, my most cynical post. I don‚Äôt want it to be untrustful but I can‚Äôt help it, so I apologize for that but it does have a silver lining, don‚Äôt leave it in the middle! Seeing lots of online content the past few weeks with the phrase ‚ÄòThe Future of X‚Äô where X can be any topic or industry you want (e.g. tech, work, testing, etc‚Ä¶) have triggered some thoughts inside me which doesn‚Äôt question the quality of said content, but the incredible certainty to predict the future of anything!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Fear and Greed&lt;/strong&gt; are the top behavioral productive motivators for anyone, and among the uncertainties, we live in. People get nervous and feel the urge to have a self check when someone prompts what‚Äôs the future of X and have the following thoughts:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Am I doing my job right?&lt;/li&gt;
  &lt;li&gt;Are there anything new or cool trends I don‚Äôt know about?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I guess for #2, everyone in the tech industry can‚Äôt help it. There is a significant amount of peer pressure, feeling of power that draws you into shiny new things!&lt;/p&gt;

&lt;p&gt;To keep growing, you definitely need to keep yourself aligned with the trends but don‚Äôt stop thinking and follow them blindly. Think before you follow. Anyone who has incredible certainty about the way of how we do things in the future (e.g. how you write software, how you test software, how is the workplace going to be) might be wrong, or might be an educated guess because it doesn‚Äôt always apply to you, your project and where you are at this point of time.&lt;/p&gt;

&lt;p&gt;The following is a quote from &lt;a href=&quot;https://en.wikipedia.org/wiki/Mickey_Mantle&quot; title=&quot;Mickey Mantle.&quot;&gt;Mickey Mantle.&lt;/a&gt; Mantle was one of the best baseball players and is regarded by many as one of the greatest in baseball history.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;It‚Äôs unbelievable how much you don‚Äôt know about the game you‚Äôve been playing all your life&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is only one thing I can believe with absolute certainty, and it‚Äôs that nobody, knows what the future leads to, but you can think about &lt;strong&gt;how to think about what‚Äôs next in any situation&lt;/strong&gt; where you don‚Äôt know what to do (e.g. what do I need to upskill? what do I need to change?)&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Find out where you are&lt;/li&gt;
  &lt;li&gt;Baby steps towards your goal&lt;/li&gt;
  &lt;li&gt;Adjust understanding based on what you have learned&lt;/li&gt;
  &lt;li&gt;Reflect and repeat&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Ziad</name></author><summary type="html"></summary></entry><entry><title type="html">Great Managers And The Dunning-Kruger Effect</title><link href="http://localhost:4000/2020-05-17/great-managers-and-the-dunning-kruger-effect" rel="alternate" type="text/html" title="Great Managers And The Dunning-Kruger Effect" /><published>2020-05-17T00:00:00+02:00</published><updated>2020-05-17T00:00:00+02:00</updated><id>http://localhost:4000/2020-05-17/great-managers-and-the%20dunning-kruger-effect</id><content type="html" xml:base="http://localhost:4000/2020-05-17/great-managers-and-the-dunning-kruger-effect">&lt;p&gt;&lt;a href=&quot;https://images.unsplash.com/photo-1507373318898-766a0e260b51?ixlib=rb-1.2.1&amp;amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=2250&amp;amp;q=80&quot;&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1507373318898-766a0e260b51?ixlib=rb-1.2.1&amp;amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=2250&amp;amp;q=80&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
Two months ago, I finished &lt;a href=&quot;https://www.goodreads.com/book/show/35957156-lost-and-founder&quot;&gt;Lost and Founder: A Painfully Honest Field Guide to the Startup World&lt;/a&gt; and there were some chapter that was titled ‚Äò&lt;strong&gt;If Management Is The Only Way Up, We ‚Äòre all Fucked&lt;/strong&gt;‚Äô. It made me reflect on some thoughts I had and as luck would have it, I also stumbled on a related question on Quora.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.quora.com/A-developer-with-weaker-programming-skill-was-promoted-to-lead-engineer-in-my-company-I-asked-the-CTO-for-a-reason-he-responded-to-me-that-a-lead-developer-doesnt-need-to-be-the-best-developer-in-the-team-how-true&quot;&gt;A developer with weaker programming skill was promoted to lead engineer in my company, I asked the CTO for a reason, he responded to me that a lead developer doesn‚Äôt need to be the best developer in the team, how true is that?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From my personal experience till this moment, the short answer is &lt;strong&gt;Yes but it really depends&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There‚Äôs a belief that anyone can be a people manager, all it takes is the will to manage, have an understanding of the problem space and be a good leader, right? &lt;strong&gt;Definitely no!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I used to believe that somehow this is true, can you be a great football team manager without playing great? Actually yes, you can simply google &lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Jos%C3%A9_Mourinho&quot;&gt;Jose Mourinho&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I now believe this was the &lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect&quot;&gt;Dunning‚ÄìKruger effect&lt;/a&gt;&lt;/strong&gt; in mind. The effect is , the incompetent are always overly convinced of their competency. People with no experience or low ability at a task overestimate their ability. Without the self-awareness, people cannot objectively evaluate their competence or incompetence.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Opposing Opinion: But the best managers I have, have previously done the work themselves and got their hands dirty (they were effective as Individual Contributors)?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This impossibly hard to argue with based on my previous experience, &lt;strong&gt;most of the great managers I have worked with were technically solid and great at understanding, motivating people&lt;/strong&gt; but not every manager needs to have a great track record as an individual contributor.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Here‚Äôs the catch much of the time great managers were great, good or at least performed well as an individual contributors but this is a correlation and does not apply to every individual contributor who performed greatly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It may be possible to be a great manager and overcome incompetences in the specific subject matter by relying on, listening and trusting your team to help you understand what you don‚Äôt know, that‚Äôs what a &lt;strong&gt;service-minded leader&lt;/strong&gt; could do. But it takes a &lt;strong&gt;serious listener&lt;/strong&gt; who is well aware of their lack of relevant knowledge, and great, experienced team members willing to help them. Possible, but rarely happens in my experience so far.&lt;/p&gt;

&lt;p&gt;A very important thing to mention is that &lt;strong&gt;sometimes when a manager doesn‚Äôt have great technical skills.&lt;/strong&gt; Team members upgrade, support each other and take an extreme ownership of the work they do.&lt;/p&gt;

&lt;p&gt;Also when in doubt, you can refer to &lt;strong&gt;Google&lt;/strong&gt;‚Äôs internal research on what behaviors make great managers great at an organization as part of the &lt;strong&gt;re:Work&lt;/strong&gt; subject researchers.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/QHnklPaN7UlXlR0-7EYtcVUTg0zTeGdtm7dqYm0Z1ubCX1FdSyxcHTQMGNPm4CfvOakEr6_1dTMlSmrOxtbT3QA=w1614&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/QHnklPaN7UlXlR0-7EYtcVUTg0zTeGdtm7dqYm0Z1ubCX1FdSyxcHTQMGNPm4CfvOakEr6_1dTMlSmrOxtbT3QA=w1614&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Ziad</name></author><summary type="html">Two months ago, I finished Lost and Founder: A Painfully Honest Field Guide to the Startup World and there were some chapter that was titled ‚ÄòIf Management Is The Only Way Up, We ‚Äòre all Fucked‚Äô. It made me reflect on some thoughts I had and as luck would have it, I also stumbled on a related question on Quora.</summary></entry><entry><title type="html">Getting familiar with business metrics as a Software Engineer</title><link href="http://localhost:4000/2020-05-09/getting-familiar-with-business-metrics-as-a-software-engineer" rel="alternate" type="text/html" title="Getting familiar with business metrics as a Software Engineer" /><published>2020-05-09T00:00:00+02:00</published><updated>2020-05-09T00:00:00+02:00</updated><id>http://localhost:4000/2020-05-09/getting-familiar-with-business-metrics-as-a-software-engineer</id><content type="html" xml:base="http://localhost:4000/2020-05-09/getting-familiar-with-business-metrics-as-a-software-engineer">&lt;blockquote&gt;
  &lt;p&gt;First and foremost: I‚Äôm deeply sorry from bottom of my heart for everyone who have experienced pay cuts or job losses. I know this may cause serious financial and psychological distress. It‚Äôs also sad to see smart, hard-working people affected due to no fault of their own.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Second: I‚Äôm not business savvy nor a financial expert, I just try to make sense of what I read and I also had the chance to work for two companies who were totally transparent about their business modals and how their revenues are generated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I was surprised to see that some of my friends, colleagues (who were focused on Software Engineering) were underestimating how a pandemic was fatal to (affecting) many businesses and industries. There are many people who are calling for re-opening the economy and there is a reasonable argument about that but this is not the idea I‚Äôm writing about here. My main motivation behind this blog post is to make some business and revenue terms that illustrate the health of business and make it familiar to anyone who have little or no knowledge about because it‚Äôs not part of their daily jobs. While some of this may be obvious to many who live and breathe these metrics all day long, I tried to explain it briefly but feel free to reach out if I‚Äôm missing something.&lt;/p&gt;

&lt;h2 id=&quot;bookings-revenue-recurring-revenue-gross-merchandise-value&quot;&gt;Bookings, Revenue, Recurring Revenue, Gross Merchandise Value&lt;/h2&gt;

&lt;h3 id=&quot;bookings-vs-revenue&quot;&gt;Bookings vs Revenue&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Bookings:&lt;/strong&gt; a contract between the company and the customer. It reflects a contractual obligation on the part of the customer to pay the company.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Revenue:&lt;/strong&gt; is recognized when the service is actually provided or ratably over the life of the subscription agreement&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;To simplify, a cloud-based SaaS solution called ‚ÄòA16‚Äô with customers that come in all shapes and sizes. A16 is offered in 4 different plans - Startup, Growth, Pro and Enterprise, priced at $200, $500, $1000 and $2000 respectively.
&lt;strong&gt;A16&lt;/strong&gt; signed up an enterprise customer ‚ÄòB‚Äô recently, under an Enterprise plan on 1st January 2019, with a contract in effect for 2 years. If &lt;strong&gt;‚ÄòB‚Äô&lt;/strong&gt; commits to two-years, so a Booking would cost &lt;strong&gt;$24000&lt;/strong&gt;. But if &lt;strong&gt;‚ÄòA16‚Äô&lt;/strong&gt; wants a reasonable guarantee of receiving payments with no commitments, then this will be a revenue.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;recurring-revenue&quot;&gt;Recurring Revenue&lt;/h3&gt;

&lt;p&gt;A recurring revenue model is how a business makes money by trading access to products or services for regular, scheduled payments.&lt;/p&gt;

&lt;p&gt;Subscription management darling, consider the day-to-day SaaS products you use: Slack, Atlassian, Spotify, Shopify, Zoom, etc‚Ä¶&lt;/p&gt;

&lt;p&gt;This can include some basic types of Recurring Revenue Models: Usage-based, User-based, Tiered-billing&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ARR (annual recurring revenue):&lt;/strong&gt; a measure of revenue components that are repeating yearly in nature.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;MRR (monthly recurring revenue)&lt;/strong&gt;: Often, people will multiply one month‚Äôs all-in bookings by 12 to get to ARR.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;gross-merchandise-value&quot;&gt;Gross Merchandise Value&lt;/h3&gt;

&lt;p&gt;In marketplaces, a metric used to value online retail businesses in initial stages, when it is too soon to judge them on the basis of metrics such as revenues and profitability.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If a company is acting merely as mediator and earning commission (takes) on transactions, then its revenue is the commission and &lt;strong&gt;not&lt;/strong&gt; the value of total transaction. Famous examples for day-to-day products (Uber, Lyft, Careem)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now comes the most important metric where all businesses can measure if they can survive an economic recession or not. &lt;strong&gt;The Cashflow.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wealth is the ability to survive X number of days forward - R. Buckminster Fuller&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;cashflow&quot;&gt;Cashflow&lt;/h2&gt;

&lt;p&gt;If you want to measure how wealthy a business is, you need to look for the &lt;strong&gt;&lt;em&gt;Cashflow&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Cashflow is determined by factors like how much revenue the business is generating, business expenditures and projections of ongoing plans/projects.&lt;/p&gt;

&lt;p&gt;An assumption that is made by many is that if business is well established, this means there are a runway that might keep companies going at least for 6 months till the recession loosens up and economies reopen but in reality this is not the case unless it‚Äôs a tech giant (e.g. Google, Amazon, Facebook, Microsoft) who have a gigantic cashflow that can keep them going for years.&lt;/p&gt;

&lt;p&gt;Also a lot of businesses weren‚Äôt aiming for profitability as much as growth which makes them invest in a lot of projects to earn more revenue on the long term and in their mind, there was mitigation plans for a doomsday economy like what the pandemic brought.&lt;/p&gt;

&lt;p&gt;So if an economic recession happens when everyone/economies are afraid globally to spend cash on non-essential items, all revenues with different business modals are affected and that leaves the companies to reassess the expenditure strategies:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Manage what they can control (Spending, Growth, Earnings)&lt;/li&gt;
  &lt;li&gt;Decrease headcount and eliminate redundancies as priorities change&lt;/li&gt;
  &lt;li&gt;Focus on business survival and cut costs (Reduce workforce, eliminate benefits)&lt;/li&gt;
  &lt;li&gt;Spend every penny as if it was their last&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;what-happens-now&quot;&gt;WHAT HAPPENS NOW?&lt;/h2&gt;

&lt;p&gt;This is just a very brief explanation and in a high-level of how business work, it just gives an insight.&lt;/p&gt;</content><author><name>Ziad</name></author><summary type="html">First and foremost: I‚Äôm deeply sorry from bottom of my heart for everyone who have experienced pay cuts or job losses. I know this may cause serious financial and psychological distress. It‚Äôs also sad to see smart, hard-working people affected due to no fault of their own.</summary></entry><entry><title type="html">Flaky Tests Explained: Why it happens and What should we control?</title><link href="http://localhost:4000/2020-04-30/flaky-tests-explained-why-it-happens-and-what-should-we-control" rel="alternate" type="text/html" title="Flaky Tests Explained: Why it happens and What should we control?" /><published>2020-04-30T00:00:00+02:00</published><updated>2020-04-30T00:00:00+02:00</updated><id>http://localhost:4000/2020-04-30/flaky-tests-explained-why-it-happens-and-what-should-we-control</id><content type="html" xml:base="http://localhost:4000/2020-04-30/flaky-tests-explained-why-it-happens-and-what-should-we-control">&lt;p&gt;&lt;a href=&quot;https://images.unsplash.com/photo-1444427169197-de497742b62d?ixlib=rb-1.2.1&amp;amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=4800&amp;amp;q=80&quot;&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1444427169197-de497742b62d?ixlib=rb-1.2.1&amp;amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=4800&amp;amp;q=80&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An important assumption of regression testing is that test outcomes are deterministic: an unmodified test is expected to either always pass or always fail for the same code under test. Unfortunately, in practice, some tests‚Äîoften called flaky tests*‚Äîhave non-deterministic outcomes. Such tests undermine the regression testing as they make it difficult to rely on test results.&lt;/p&gt;

&lt;p&gt;*flaky means unreliable.&lt;/p&gt;

&lt;p&gt;Some approaches I have seen to tackle flaky tests are rather not good enough. The most common approaches I have seen:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Run a flaky test multiple times&lt;/strong&gt; , and if it passes in any run, declare it passing, even if it fails in several other runs. For example, the process we have at my most recent employer, a failing test is rerun at least 3 times against the same code version on which it previously failed, and if it fails in an of those 3 reruns, &lt;strong&gt;it is labeled as a flaky test&lt;/strong&gt;. Some open-source testing frameworks also have annotations (e.g. Android has &lt;strong&gt;@FlakyTest&lt;/strong&gt;, Jenkins has &lt;strong&gt;@RandomFail&lt;/strong&gt;) to label flaky tests that require a few reruns upon failure.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Remove flaky tests from the test suite&lt;/strong&gt;, or to mentally ignore their results most of the
time (in the limit, ignoring the failure every time is equivalent to removing the test). In &lt;strong&gt;JUnit&lt;/strong&gt; the &lt;strong&gt;@Ignore&lt;/strong&gt; annotation is used to exclude a test from the test suite to be run. Needless to say this is a very dangerous approach and an invitation to miss out bugs on your codebase and it spreads low-confidence on the tests among your team!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The thing is not any of the above approaches really address the problem or root causes of flaky tests, it‚Äôs mostly workarounds and some mitigation patterns to keep the wheel running.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flaky tests root causes:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Occasionally flaky tests are resulted either from the application codebase or the first time it was written&lt;/li&gt;
  &lt;li&gt;Synchronization between tests, actions inside each test account for a relative percentage for test flakiness&lt;/li&gt;
  &lt;li&gt;Test Order Dependency  where tests are dependent on each other during execution&lt;/li&gt;
  &lt;li&gt;Concurrency and threading where tests use background and main threads which sometimes produce some unpredictability among the tests&lt;/li&gt;
  &lt;li&gt;Memory leaks, time and IO operations could also be an issue&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;How should we fix causes of flaky tests?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is no perfect solution or one size fits all but you can start with the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Synchronization&lt;/strong&gt;: address the order violation between different threads or processes in the application under test&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;: introduce asynchronous processes if you can without affecting codebase to ensure tests are supposed to be accessed by one thread at a time and make processes in test more deterministic.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Network&lt;/strong&gt;: the best fixes for this category is to use mocks. Whenever the use
of mocks is non practical, fallback to synchronization&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Randomness&lt;/strong&gt;: always run tests in random order, include random data within your tests as well but don‚Äôt let it be unpredictable in your tests.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;There is still flaky tests, how should we deal with that?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Again, no perfect solution here but you can try the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Run until it passes!&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quarantine and fix&lt;/strong&gt; (e.g. mark down flaky tests as you go, quarantine it and once you have the chance go fix them!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let‚Äôs keep the conversation going! Do you have any interesting flaky test stories? What is your team‚Äôs approach for dealing with the problem?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://circleci.com/blog/using-insights-to-discover-flaky-slow-and-failed-tests/&quot;&gt;CircleCI: Using Insights to Discover Flaky, Slow, and Failed Tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/articles/nonDeterminism.html&quot;&gt;Eradicating Non-Determinism in Tests by Martin Fowler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://testing.googleblog.com/2017/04/where-do-our-flaky-tests-come-from.html&quot;&gt;Google Testing Blog: Where do our flaky tests come from?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Ziad</name></author><summary type="html"></summary></entry><entry><title type="html">Till next year, good times!</title><link href="http://localhost:4000/2020-04-27/till-next-year-good-times" rel="alternate" type="text/html" title="Till next year, good times!" /><published>2020-04-27T00:00:00+02:00</published><updated>2020-04-27T00:00:00+02:00</updated><id>http://localhost:4000/2020-04-27/till-next-year-good-times</id><content type="html" xml:base="http://localhost:4000/2020-04-27/till-next-year-good-times">&lt;p&gt;&lt;strong&gt;NOW WHAT?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At the time of the writing, COVID-19 cases have exceeded more than 2.5 million and are increasing around the world. To reduce growth, governments have moved to stricter social distancing with ‚Äúshelters in place‚Äù orders in many areas around the globe.&lt;/p&gt;

&lt;p&gt;If you are feeling paralyzed, have plans in mind which you can‚Äôt no longer do, read on and this may help on tricking your mind into adapting a thinking methodology to navigate these stressful times.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When facing such a disaster,¬†people tend to resort to behaviors:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Optimism bias and over-reliance on past patterns (e.g. believing things will be sorted out soon although there is no relief on sight and a vaccine is still a long way to go)&lt;/li&gt;
  &lt;li&gt;Slow or bad decisions (e.g. unfamiliarity of the situation leads to a desire to wait for more facts which results on disappointments and delayed responses)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How can I deal with uncertainty and not let it affect me drastically?&lt;/strong&gt;
The best way to do that is to confront the uncertainty with some course of actions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Get a real view of how the world is changing around you (e.g. Uncertainity is here to stay for some time, deal with it)&lt;/li&gt;
  &lt;li&gt;Think of time-boxed scenarios and multiple versions of what can happen to confront uncertainty (e.g.  1-2 months, 1-2 quarters, 1-2 years, next normal?)&lt;/li&gt;
  &lt;li&gt;Adapt your actions and moves among these scenarios above (e.g. deterministic plan won‚Äôt be right for very long. But making everything flexible can be a path to nowhere. You need to think about moves that you can make across all likely scenarios, even if every move isn‚Äôt a winner on its own)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Under high levels of uncertainty, you need to think fast and adapt!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WHERE DO WE GO FROM HERE?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ups and downs always occur through history, every-time it felt like the world is about to end (i.e. at least what is written on books)&lt;/li&gt;
  &lt;li&gt;Recovery will be long and may take some time!&lt;/li&gt;
  &lt;li&gt;Survival of the resilient&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Just got out Uber &amp;amp; driver was making 95% less money than pre COVID. &lt;br /&gt;&lt;br /&gt;So in 4 weeks she learned &lt;a href=&quot;https://twitter.com/webflow?ref_src=twsrc%5Etfw&quot;&gt;@webflow&lt;/a&gt; &amp;amp; is now making websites for largely personal trainers and online tutors. &lt;br /&gt;&lt;br /&gt;She now makes 2x more than she did driving. &lt;br /&gt;&lt;br /&gt;Always be amazed by human resiliency. Inspiring. üëç&lt;/p&gt;&amp;mdash; Harry Stebbings (@HarryStebbings) &lt;a href=&quot;https://twitter.com/HarryStebbings/status/1254166350978789382?ref_src=twsrc%5Etfw&quot;&gt;April 25, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Ziad</name></author><summary type="html">NOW WHAT?</summary></entry><entry><title type="html">4 Major Reasons Why Your Automation Tests Sucks!</title><link href="http://localhost:4000/2020-03-24/4-major-reasons-why-your-automation-tests-do-not-scale" rel="alternate" type="text/html" title="4 Major Reasons Why Your Automation Tests Sucks!" /><published>2020-03-24T00:00:00+02:00</published><updated>2020-03-24T00:00:00+02:00</updated><id>http://localhost:4000/2020-03-24/4-major-reasons-why-your-automation-tests-do-not-scale</id><content type="html" xml:base="http://localhost:4000/2020-03-24/4-major-reasons-why-your-automation-tests-do-not-scale">&lt;h2 id=&quot;1-if-tests-go-well-you-always-question-if-you-are-doing-it-right-if-everything-doesnt-go-well-you-spend-a-lot-of-time-to-fix-it&quot;&gt;1. If tests go well, you always question if you are doing it right. If everything doesn‚Äôt go well, you spend a lot of time to fix it&lt;/h2&gt;

&lt;p&gt;You know when you have a great automation architecture that you release fast and often, the team is not stressed and releases go smoothly. You release and boom, you need to release a hotfix for a bug or a crash that was missed by your tests. So what do we learn from this? You might be doing an anti-pattern.&lt;/p&gt;

&lt;h4 id=&quot;what-many-teams-do&quot;&gt;What many teams do?&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://i0.wp.com/saeedgatson.com/wp-content/uploads/2015/10/softwaretestingicecreamconeantipattern.png&quot; title=&quot;What many teams do&quot;&gt;&lt;img src=&quot;https://i0.wp.com/saeedgatson.com/wp-content/uploads/2015/10/softwaretestingicecreamconeantipattern.png&quot; alt=&quot;What many teams do&quot; title=&quot;What many teams do&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;how-it-should-be-done&quot;&gt;How it should be done?&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://watirmelon.files.wordpress.com/2018/02/ideal-automated-testing-pyramid.jpg&quot; title=&quot;How it should be done?&quot;&gt;&lt;img src=&quot;https://watirmelon.files.wordpress.com/2018/02/ideal-automated-testing-pyramid.jpg&quot; alt=&quot;How it should be done?&quot; title=&quot;How it should be done?&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-although-you-automate-100-of-what-could-be-automated-because-you-believe-manual-testing-sucks-you-aim-to-catch-bugs-provide-fast-feedback-and-release-confidently-but-this-does-not-prevent-bugs&quot;&gt;2. Although you automate 100% of what could be automated because you believe manual testing sucks. You aim to catch bugs, provide fast feedback and release confidently but this DOES NOT PREVENT BUGS.&lt;/h2&gt;

&lt;p&gt;Great tests are designed about how to approach a testing problem, then figure out what‚Äôs suitable for automation, and what‚Äôs not suitable. Nevertheless, finding the automation line can be a tricky business. Test automation is just one tool from our tester toolbox that we can use to solve a specific set of testing problems and it may not work for everything you want to tackle. You need also to work on how to prevent bad code from getting in your production code, make use of static analysis tools to check for code smells.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;hhttps://miro.medium.com/max/450/1*HuRYehHuKag-ZnU0CP3JTg.jpeg&quot; title=&quot;Code Smells&quot;&gt;&lt;img src=&quot;https://miro.medium.com/max/450/1*HuRYehHuKag-ZnU0CP3JTg.jpeg&quot; alt=&quot;Code Smells&quot; title=&quot;Code Smells&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-10-automated-tests-are-better-than-0-automated-tests-maybe-thats-right-but-are-they-flaky&quot;&gt;3. 10 automated tests are better than 0 automated tests. Maybe that‚Äôs right but are they flaky?&lt;/h2&gt;

&lt;p&gt;Flaky tests are worse than no tests in my opinion and you should attack it once faced, that‚Äôs should be everyone‚Äôs priority or it could be moved to the backlog for the next 2 months! Assume a zero-tolerance culture on flakiness.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;4-code-coverage-may-be-queen-but-test-design-is-king&quot;&gt;4. Code coverage may be queen but test design is KING!&lt;/h2&gt;

&lt;p&gt;Basic verification that would be hit by anyone walking through the basics of the application isn‚Äôt worth much. However, if your automation takes advantage of automation ‚Äì meaning that loops, randomness, input variations, and loads of other ideas are part of the automation approach.&lt;/p&gt;</content><author><name>Ziad</name></author><summary type="html">1. If tests go well, you always question if you are doing it right. If everything doesn‚Äôt go well, you spend a lot of time to fix it</summary></entry><entry><title type="html">A Personal Challenge To Add Value #COVID19</title><link href="http://localhost:4000/2020-03-18/a-personal-challenge-to-add-value" rel="alternate" type="text/html" title="A Personal Challenge To Add Value  #COVID19" /><published>2020-03-18T00:00:00+02:00</published><updated>2020-03-18T00:00:00+02:00</updated><id>http://localhost:4000/2020-03-18/a-personal-challenge-to-add-value</id><content type="html" xml:base="http://localhost:4000/2020-03-18/a-personal-challenge-to-add-value">&lt;p&gt;&lt;strong&gt;For months, there was speculation about how the economic situation is going to grim that some fear may be as bad as the 1928 crisis and that is the case with COVID-19 hitting the globe. I think now more than ever we need to support each other&lt;/strong&gt;. We are all affected together, certainly, but you can‚Äôt do much about that to stay at home and try to flatten the curve.&lt;/p&gt;

&lt;p&gt;So, I had to stop thinking of the aftermath, take my mind off that, do something productive and write this blog!&lt;/p&gt;

&lt;p&gt;Day-to-day. What matters is who you are, and how do you react to bad times. If you‚Äôre the right sort of person, you‚Äôll find a way to win even in a bad economy. And if you‚Äôre not, a good economy won‚Äôt save you.&lt;/p&gt;

&lt;p&gt;When we started to co-organize Ministry of Testing Cario, I always wondered about how do Software Testers in Egypt support each other outside of their workplace, I felt an unease that we have not so many communities around and no perfect place to cooperate where you can be around like-minded professionals of the same craft in a venue. That‚Äôs why we started co-organizing Ministry of Testing Cairo meetups. I always thought that if you have a knowledge that might make life easier, you are obliged to share it and how this will make a difference to your community and network.&lt;/p&gt;

&lt;p&gt;Since social life has been halted and these are hard times for everyone, we should strive on how to empower each other now more than ever for what‚Äôs coming ahead :muscle:&lt;/p&gt;

&lt;h4 id=&quot;thats-why-im-setting-a-daily-challenge-on-how-i-can-try-to-add-value-to-my-network-i-enjoy-supporting-mentoring-and-below-what-i-can-help-you-with&quot;&gt;That‚Äôs why I‚Äôm setting a daily challenge on how I can try to add value to my network. I enjoy supporting, mentoring and below what I can help you with:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Mobile Apps Testing Strategy&lt;/li&gt;
  &lt;li&gt;Automation Frameworks/Best Practices/Trends&lt;/li&gt;
  &lt;li&gt;Public Speaking&lt;/li&gt;
  &lt;li&gt;Career Advice&lt;/li&gt;
  &lt;li&gt;Anything top off your mind.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let‚Äôs grab a coffee and meet remotely for an hour :coffee: Feel free to drop me a message here :point_right: :inbox_tray: &lt;a href=&quot;https://ziadtawfeek.typeform.com/to/Yriu8h&quot; title=&quot;https://ziadtawfeek.typeform.com/to/Yriu8h&quot;&gt;https://ziadtawfeek.typeform.com/to/Yriu8h&lt;/a&gt; and I will reach out to you to discuss anything in your mind.&lt;/p&gt;

&lt;h4 id=&quot;staysafe-togetherathome&quot;&gt;#StaySafe #TogetherAtHome&lt;/h4&gt;</content><author><name>Ziad</name></author><summary type="html">For months, there was speculation about how the economic situation is going to grim that some fear may be as bad as the 1928 crisis and that is the case with COVID-19 hitting the globe. I think now more than ever we need to support each other. We are all affected together, certainly, but you can‚Äôt do much about that to stay at home and try to flatten the curve.</summary></entry><entry><title type="html">Things I learned at TestBash Munich 2018 #OKTOBERTEST</title><link href="http://localhost:4000/2018-09-29/things-i-learned-at-testbash-munich-2018-oktobertest" rel="alternate" type="text/html" title="Things I learned at TestBash Munich 2018 #OKTOBERTEST" /><published>2018-09-29T00:00:00+02:00</published><updated>2018-09-29T00:00:00+02:00</updated><id>http://localhost:4000/2018-09-29/things-i-learned-at-testbash-munich-2018%20-#oktobertest</id><content type="html" xml:base="http://localhost:4000/2018-09-29/things-i-learned-at-testbash-munich-2018-oktobertest">&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; &lt;strong&gt;TestBash Munich&lt;/strong&gt; was awesome! the talks and the people were well worth it and &lt;strong&gt;Open Space&lt;/strong&gt; was even better than I thought it would be. Only 3 talks left (to be updated). Also, Thanks to &lt;a href=&quot;https://instabug.com/&quot;&gt;&lt;strong&gt;Instabug&lt;/strong&gt;&lt;/a&gt; for making it happen!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚Ä¶&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Okay, let‚Äôs do this. I don‚Äôt know if I mentioned beforehand but this would be my first time sharing an experience through a blog, I will try to make it a good one!&lt;/p&gt;

&lt;p&gt;I have been following &lt;a href=&quot;https://www.ministryoftesting.com/events&quot;&gt;TestBash&lt;/a&gt; events for some time now and a couple of weeks ago, I got to experience my first ever TestBash at Munich!&lt;/p&gt;

&lt;h1 id=&quot;whats-so-special-about-testbash&quot;&gt;What‚Äôs so special about TestBash?&lt;/h1&gt;

&lt;p&gt;It‚Äôs a conference where the testing community meets and discusses several topics. The conference format usually a two-day event (could be more):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Day One&lt;/strong&gt;: Line-up of &lt;strong&gt;selected speakers&lt;/strong&gt; to talk about anything &lt;strong&gt;testing.&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Day Two: Open space&lt;/strong&gt; which is a free-structured where anyone can write down any idea or a topic to discuss, share or learn and everyone gets to vote according to their preference. (It was awesome!).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;interesting-how-did-it-go&quot;&gt;Interesting, how did it go?&lt;/h1&gt;

&lt;p&gt;First, there was a meetup that is custom before and after the conference, I arrived in Munich and straight away got to attend the Pre TestBash hosted at &lt;a href=&quot;https://qualityminds.de/en&quot;&gt;&lt;strong&gt;QualityMinds GmbH&lt;/strong&gt;&lt;/a&gt;. The meetup was a chance to say hello to the speakers and the attendees and get people into the spirit of TestBash.&lt;/p&gt;

&lt;p&gt;For an introvert, meetups might be overwhelming and networking functions maybe naturally stressful.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1000/1*BgjLsToiW2B0knuFlKazaA.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once I arrived, everyone was so inviting and after some time, I felt relaxed and enjoyed a lot of conversations for the rest of the night.&lt;/p&gt;

&lt;h1 id=&quot;conference-day&quot;&gt;Conference Day&lt;/h1&gt;

&lt;p&gt;It included a line-up of 9 talks and I will point out my take on some of the talks&lt;/p&gt;

&lt;h1 id=&quot;doubt-builds-trust--elizabeth-zagroba&quot;&gt;Doubt builds trust ‚Äî &lt;a href=&quot;https://twitter.com/ezagroba&quot;&gt;Elizabeth Zagroba&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Elizabeth focused on &lt;strong&gt;interviewing and hiring&lt;/strong&gt;. We always need to find out what candidates bring to the table and whether you will be able to build trust in them to get things done in a &lt;strong&gt;very short interview time span.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;She illustrated the definition of &lt;strong&gt;trust&lt;/strong&gt; and &lt;strong&gt;distrust&lt;/strong&gt; according to &lt;a href=&quot;https://www.thinbook.com/the-thin-book-of-trust/&quot;&gt;The Thin Book of Trust&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/6072/1*mv7PfBmOOGJKZ0ix1JoiyA.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Try to understand them. So the thing that might help was to &lt;strong&gt;sit on the same side of the table as the candidate&lt;/strong&gt; ‚Äî and &lt;strong&gt;pair test with them&lt;/strong&gt; on an application. She also presented &lt;strong&gt;Frances Frei **pillar&lt;/strong&gt;:** &lt;strong&gt;Authenticity&lt;/strong&gt;, &lt;strong&gt;Logic,&lt;/strong&gt; and **Empathy **and provided points like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Encouraging the candidates to be themselves (it‚Äôs okay not to know everything and some areas can be taught).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;She was looking for candidates to identify problems and whom that might affect, or to whom might be relevant for (it‚Äôs fine if people didn‚Äôt know who to get to exactly!).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The best thing candidates may ask ‚ÄúIs this what you had in mind‚Äù when an area of the website was taking a very long time to load. Expressing this kind of doubt meant being authentic.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I really liked the reasoning points, the great stories illustrated and I agree that doubt helps us becoming better testers.&lt;/p&gt;

&lt;h1 id=&quot;storytelling-and-software-testing--christian-vogt&quot;&gt;Storytelling and Software Testing ‚Äî &lt;a href=&quot;https://twitter.com/EisUndDamp&quot;&gt;Christian Vogt&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Christian started by showing pictures: some of them are of films or just pictures. And instantly, we aren‚Äôt just seeing the picture, but remembering or imagining the story behind them. &lt;strong&gt;Facts with a story help us to remember them&lt;/strong&gt;. Stories also put us in the situation of a participant which makes us able to experience things, it sticks!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/6072/1*Lj6XcQN7DcCKOkymE5I6uA.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To get to software testing&lt;/strong&gt;: our customer can be the hero. The call to adventure is to use the software. What does that journey then look like for them? I was confused at first while listening to Christian‚Äôs talk and after some reflection, I found out that &lt;strong&gt;testers are always providing facts with a storytelling context in an everyday job&lt;/strong&gt; (e.g. What caused this bug? How to reproduce a bug? How might that affect the user?).&lt;/p&gt;

&lt;p&gt;He also encouraged to use storyboards where each little picture helps to tell a user journey.&lt;/p&gt;

&lt;h1 id=&quot;testing-for-purpose--ravneet-kaur&quot;&gt;Testing for Purpose ‚Äî &lt;a href=&quot;https://twitter.com/ravneetkj&quot;&gt;Ravneet Kaur&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;We do need purpose. Ravneet asked why we develop software at all?. Answers are &lt;strong&gt;‚Äúto solve a problem‚Äù&lt;/strong&gt; or &lt;strong&gt;‚Äúto make people‚Äôs life easier‚Äù&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;She summed up: we‚Äôre trying to change the world for the better. And yet, a lot of the time we end up developing products and features that no one wants. She mentioned the &lt;strong&gt;well-known figure of 65% of features not being used&lt;/strong&gt; most of the time citing examples of failed projects (e.g. &lt;a href=&quot;https://www.youtube.com/watch?v=4EvNxWhskf8&quot;&gt;Google Glass&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=X1oHp-VvhDE&quot;&gt;Juicero&lt;/a&gt;, etc‚Ä¶)&lt;/p&gt;

&lt;p&gt;So how do we avoid making products and services that no one wants? &lt;strong&gt;We need a culture of experimentation&lt;/strong&gt;. Software development is inherently uncertain. We make plans, have long meetings. And these plans and meetings are inconclusive. We should be out there experimenting and testing.&lt;/p&gt;

&lt;p&gt;How can we create a culture of experimentation? There are three questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Should we build it? Does it matter?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is it usable?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does it break?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first two questions are quite tricky but the answer is &lt;strong&gt;Minimal Viable Product&lt;/strong&gt;. This surely doesn‚Äôt have to be a v1.0, it doesn‚Äôt have to contain a single line of code. It was really enlightening to talk and I could definitely relate to that. I have previously worked in a product where most of the features aren‚Äôt used and eventually it became obsolete.&lt;/p&gt;

&lt;h1 id=&quot;how-to-scale-mobile-testing-across-several-teams--daniel-knott&quot;&gt;How to Scale Mobile Testing Across Several Teams ‚Äî &lt;a href=&quot;https://twitter.com/dnlkntt&quot;&gt;Daniel Knott&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Daniel is a well-known mobile expert, speaker at various conferences in Europe and this was my favorite talk ü§ì He talked about the &lt;strong&gt;history of mobile technology, how did it change our life?&lt;/strong&gt; and how companies like &lt;a href=&quot;https://www.xing.com/en&quot;&gt;&lt;strong&gt;&lt;em&gt;XING&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; had to develop strategies to keep up the pace. He mentioned the challenges they were facing in scalability. The pace of development from the web teams just couldn‚Äôt be matched by the mobile teams and once the mobile usage exceeded web hits, the company needed to come up with a new initiative ‚Äî mobile unleashing but there were more challenges along the way.&lt;/p&gt;

&lt;p&gt;First thing is to get away from ‚Äúweb thinking‚Äù, and the next problem was ‚Äúhiring‚Äù, communication was also an overhead challenge. The pace of development means that a lot needs to be clarified. (e.g. Face to face, Slack, Github ‚Äî whatever channel) and it‚Äôs just not possible to just ‚Äúrollback‚Äù a mobile app once it‚Äôs shipped. With so many teams, so many challenges like the above, they introduced **Release Trains **which meant planned code freezes, fixed dates, so the train is always on time, if you missed the train, the feature doesn‚Äôt go live!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/6072/1*z-6qg9D2eLcW0ziNNoqvbw.jpeg&quot; alt=&quot;Release Train&quot; /&gt;&lt;/p&gt;

&lt;p&gt;He then gave a walkthrough about some of the challenges faced in test automation, how they overcame it by migrating from Espresso &amp;amp; Keep It Functional to Calabash and release process.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/6072/1*V9Nd8e35XAtPIgt3JlQgwg.jpeg&quot; alt=&quot;Build Pipeline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It was an awesome talk, most of the challenges mentioned I could relate to and we happily overcame most of those challenges at &lt;a href=&quot;https://instabug.com/&quot;&gt;&lt;strong&gt;&lt;em&gt;Instabug&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;. üí™&lt;/p&gt;

&lt;h1 id=&quot;testing-in-production-anti-pattern-or-future-lukasz-raslonek&quot;&gt;Testing in Production: Anti-pattern or Future? &lt;a href=&quot;https://twitter.com/testdetective&quot;&gt;Lukasz Raslonek&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Disclaimer: Something controversial is coming! This was an insightful topic, I have learned ways how to expose your environment and get rapid feedback on how your services work.&lt;/p&gt;

&lt;p&gt;Obviously, Lukasz is not talking about &lt;strong&gt;someone who only checks if anything works once it‚Äôs released&lt;/strong&gt;. it‚Äôs a bit more than this. It‚Äôs about &lt;strong&gt;why would you want to test in production?&lt;/strong&gt; after all, customers use the product in the production environment!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/6072/1*0ZGAkcbxCN8UVcn5lFwNcw.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lukasz‚Äôs first reason is distributed systems. Creating a test system for that is difficult and expensive. Consider &lt;strong&gt;&lt;em&gt;Netflix Service Oriented Architecture.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1280/1*LQzPd12M_DHJQRAR1y2a4g.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The more complex and distributed your architecture is, the harder it is to maintain your test environment. It‚Äôs all fine and well the plenty of test scenarios covered but &lt;strong&gt;there are some situations when you can‚Äôt know in advance all the scenarios happening in your production environment&lt;/strong&gt;. He then used the word which I really like &lt;strong&gt;‚ÄúUnknown unknowns‚Äù. **If you are into this word, you can google [&lt;/strong&gt;The Five Orders of Ignorance]**(https://www.researchgate.net/publication/27293624_The_Five_Orders_of_Ignorance).&lt;/p&gt;

&lt;p&gt;It‚Äôs like driving a car no matter how an expert in your navigation, there‚Äôs always something unpredictable that can happen. Lukasz also gave a walkthrough on how to tackle it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The first approach is the &lt;strong&gt;Canary Testing&lt;/strong&gt;. When we deploy a new version, we keep the stable version in production too and only divert a small amount of traffic to the new version. We minimize the risk of problems being wide-reaching in this way. (e.g. &lt;a href=&quot;https://code.fb.com/web/rapid-release-at-massive-scale/&quot;&gt;Facebook&lt;/a&gt; uses New Zealand a testing location to analyze logs and metrics to decide whether a feature to be kept or not).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The second approach is &lt;strong&gt;Chaos Engineering&lt;/strong&gt;. This will test the high availability of the production environment by introducing deliberate errors. (e.g. Netflix created a tool ‚Äú&lt;a href=&quot;https://github.com/Netflix/chaosmonkey&quot;&gt;Chaos Monkey&lt;/a&gt;‚Äù that shuts down or reboots random production servers).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The third approach is &lt;strong&gt;Test Automation&lt;/strong&gt;. It‚Äôs not a luxury anymore, you may implement test suites in your pre-production environment but it would be also a good idea to execute a smoke test suite in production to ensure that the core features are still operational. On top of that, it‚Äôs a way of creating metrics, it‚Äôs better to have data of the peak hours and non-peak hours for your services.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Production is not predictable, it‚Äôs always unexpected and that‚Äôs why we should have different ways of testing and monitoring.&lt;/p&gt;</content><author><name>Ziad</name></author><summary type="html">TL;DR TestBash Munich was awesome! the talks and the people were well worth it and Open Space was even better than I thought it would be. Only 3 talks left (to be updated). Also, Thanks to Instabug for making it happen!</summary></entry></feed>